#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Pijlpunten
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
using System.IO;
using System.IO.IsolatedStorage;
using Microsoft.Phone.Data.Linq.Mapping;
using Microsoft.Phone.Data.Linq;


public class DebugWriter : TextWriter
{
    private const int DefaultBufferSize = 256;
    private System.Text.StringBuilder _buffer;

    public DebugWriter()
    {
        BufferSize = 256;
        _buffer = new System.Text.StringBuilder(BufferSize);
    }

    public int BufferSize
    {
        get;
        private set;
    }

    public override System.Text.Encoding Encoding
    {
        get { return System.Text.Encoding.UTF8; }
    }

    #region StreamWriter Overrides
    public override void Write(char value)
    {
        _buffer.Append(value);
        if (_buffer.Length >= BufferSize)
            Flush();
    }

    public override void WriteLine(string value)
    {
        Flush();

        using(var reader = new StringReader(value))
        {
            string line; 
            while( null != (line = reader.ReadLine()))
                System.Diagnostics.Debug.WriteLine(line);
        }
    }

    protected override void Dispose(bool disposing)
    {
        if (disposing)
            Flush();
    }

    public override void Flush()
    {
        if (_buffer.Length > 0)
        {
            System.Diagnostics.Debug.WriteLine(_buffer);
            _buffer.Clear();
        }
    }
    #endregion
}


	public partial class DBpijlpuntenContext : System.Data.Linq.DataContext
	{
		
		public bool CreateIfNotExists()
		{
			bool created = false;
			if (!this.DatabaseExists())
			{
				string[] names = this.GetType().Assembly.GetManifestResourceNames();
				string name = names.Where(n => n.EndsWith(FileName)).FirstOrDefault();
				if (name != null)
				{
					using (Stream resourceStream = Assembly.GetExecutingAssembly().GetManifestResourceStream(name))
					{
						if (resourceStream != null)
						{
							using (IsolatedStorageFile myIsolatedStorage = IsolatedStorageFile.GetUserStoreForApplication())
							{
								using (IsolatedStorageFileStream fileStream = new IsolatedStorageFileStream(FileName, FileMode.Create, myIsolatedStorage))
								{
									using (BinaryWriter writer = new BinaryWriter(fileStream))
									{
										long length = resourceStream.Length;
										byte[] buffer = new byte[32];
										int readCount = 0;
										using (BinaryReader reader = new BinaryReader(resourceStream))
										{
											// read file in chunks in order to reduce memory consumption and increase performance
											while (readCount < length)
											{
												int actual = reader.Read(buffer, 0, buffer.Length);
												readCount += actual;
												writer.Write(buffer, 0, actual);
											}
										}
									}
								}
							}
							created = true;
						}
						else
						{
							this.CreateDatabase();
							created = true;
						}
					}
				}
				else
				{
					this.CreateDatabase();
					created = true;
				}
			}
			return created;
		}
		
		public bool LogDebug
		{
			set
			{
				if (value)
				{
					this.Log = new DebugWriter();
				}
			}
		}
		
		public static string ConnectionString = "Data Source=isostore:/DBpijlpunten.sdf";

		public static string ConnectionStringReadOnly = "Data Source=appdata:/DBpijlpunten.sdf;File Mode=Read Only;";

		public static string FileName = "DBpijlpunten.sdf";

		public DBpijlpuntenContext(string connectionString) : base(connectionString)
		{
			OnCreated();
		}
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTbl_Archer(Tbl_Archer instance);
    partial void UpdateTbl_Archer(Tbl_Archer instance);
    partial void DeleteTbl_Archer(Tbl_Archer instance);
    #endregion
		
		public System.Data.Linq.Table<Tbl_Archer> Tbl_Archer
		{
			get
			{
				return this.GetTable<Tbl_Archer>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="tbl_Archer")]
	public partial class Tbl_Archer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Archer_Id;
		
		private string _Archer_Name;
		
		private string _Archer_Guild;
		
		private double _Archer_Avarage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnArcher_IdChanging(int value);
    partial void OnArcher_IdChanged();
    partial void OnArcher_NameChanging(string value);
    partial void OnArcher_NameChanged();
    partial void OnArcher_GuildChanging(string value);
    partial void OnArcher_GuildChanged();
    partial void OnArcher_AvarageChanging(double value);
    partial void OnArcher_AvarageChanged();
    #endregion
		
		public Tbl_Archer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Archer_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Archer_Id
		{
			get
			{
				return this._Archer_Id;
			}
			set
			{
				if ((this._Archer_Id != value))
				{
					this.OnArcher_IdChanging(value);
					this.SendPropertyChanging();
					this._Archer_Id = value;
					this.SendPropertyChanged("Archer_Id");
					this.OnArcher_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Archer_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Archer_Name
		{
			get
			{
				return this._Archer_Name;
			}
			set
			{
				if ((this._Archer_Name != value))
				{
					this.OnArcher_NameChanging(value);
					this.SendPropertyChanging();
					this._Archer_Name = value;
					this.SendPropertyChanged("Archer_Name");
					this.OnArcher_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Archer_Guild", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Archer_Guild
		{
			get
			{
				return this._Archer_Guild;
			}
			set
			{
				if ((this._Archer_Guild != value))
				{
					this.OnArcher_GuildChanging(value);
					this.SendPropertyChanging();
					this._Archer_Guild = value;
					this.SendPropertyChanged("Archer_Guild");
					this.OnArcher_GuildChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Archer_Avarage", DbType="Float NOT NULL")]
		public double Archer_Avarage
		{
			get
			{
				return this._Archer_Avarage;
			}
			set
			{
				if ((this._Archer_Avarage != value))
				{
					this.OnArcher_AvarageChanging(value);
					this.SendPropertyChanging();
					this._Archer_Avarage = value;
					this.SendPropertyChanged("Archer_Avarage");
					this.OnArcher_AvarageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
